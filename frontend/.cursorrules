# ビール管理アプリ - 開発仕様

## プロジェクト概要
ビールの飲酒量を管理するWebアプリケーション。ユーザーが飲んだビールの記録、統計、分析機能を提供する。

## 技術スタック
- Next.js 14 (App Router)
- TypeScript
- Tailwind CSS
- 状態管理: Zustand または Context API
- 画像処理: Next.js Image API
- AI機能: OpenAI API または Google Vision API
- データベース: SQLite (開発) / PostgreSQL (本番)
- ORM: Prisma

## ページ構成

### 1. トップページ (`/`)
**機能:**
- 今月・先月の飲酒量を表示
- 3つの主要アクションボタン（丸いデザイン）
  - 「お酒を追加」ボタン
  - 「記録・統計を見る」ボタン
  - 「友人を探す」ボタン
- 今月の目標達成率表示
- 最近の飲酒記録（最新3件）

**デザイン要件:**
- 丸いボタン（直径120px程度）
- グラデーション背景
- レスポンシブデザイン
- ダークモード対応

### 2. お酒を追加ページ (`/add-drink`)
**機能:**
- 写真アップロード機能
- レストラン名入力（オートコンプリート付き）
- ドリンク名選択（ビール種類の選択肢）
- 感想入力（テキストエリア）
- 量入力（ml単位）
- AI量推論機能（グラス横に10円玉を置いて撮影）

**AI機能詳細:**
- 画像からグラスの容量を自動推論
- 10円玉を基準としたスケール計算
- 推論結果の信頼度表示
- 手動修正可能

**API連携:**
- Google Places API（レストラン検索）
- OpenAI Vision API（画像分析）
- ビール情報API（ドリンク名・種類）

### 3. 統計ページ (`/statistics`)
**機能:**
- 時系列での飲酒記録表示
- 詳細ページへのリンク
- 統計情報表示
  - レストラン別集計
  - お酒種類別集計
  - 日付別集計
  - 月別・年別トレンド

**詳細ページ機能:**
- 写真の拡大表示
- 感想の詳細表示
- 編集・削除機能
- ソーシャルシェア機能

## データモデル

### DrinkRecord
```typescript
interface DrinkRecord {
  id: string;
  userId: string;
  photoUrl: string;
  restaurantName: string;
  drinkName: string;
  drinkType: 'beer' | 'wine' | 'cocktail' | 'other';
  amount: number; // ml
  aiEstimatedAmount?: number;
  confidence?: number; // AI推論の信頼度
  thoughts: string;
  createdAt: Date;
  updatedAt: Date;
}
```

### User
```typescript
interface User {
  id: string;
  name: string;
  email: string;
  monthlyGoal?: number; // ml
  preferences: {
    favoriteRestaurants: string[];
    favoriteDrinks: string[];
  };
  createdAt: Date;
}
```

## 主要機能仕様

### 1. 画像処理機能
- 画像アップロード（ドラッグ&ドロップ対応）
- 画像圧縮・最適化
- AI分析による容量推論
- 画像プレビュー

### 2. AI量推論機能
- 10円玉を基準としたスケール検出
- グラスの形状認識
- 容量計算アルゴリズム
- 信頼度スコア算出

### 3. 統計・分析機能
- リアルタイム統計更新
- グラフ・チャート表示
- フィルタリング機能
- エクスポート機能

### 4. ソーシャル機能
- 友人検索・追加
- 飲酒記録のシェア
- ランキング機能
- グループ機能

## UI/UX要件

### デザインシステム
- カラーパレット: ビールをイメージした琥珀色系
- フォント: 読みやすいサンセリフ
- アイコン: 一貫性のあるアイコンセット
- アニメーション: スムーズな遷移効果

### レスポンシブ対応
- モバイルファースト設計
- タブレット・デスクトップ対応
- タッチ操作最適化

### アクセシビリティ
- キーボードナビゲーション対応
- スクリーンリーダー対応
- 高コントラストモード対応

## 開発優先順位

### Phase 1 (MVP)
1. 基本的なCRUD機能
2. トップページ・追加ページ・統計ページ
3. 基本的な画像アップロード機能

### Phase 2
1. AI量推論機能
2. 詳細な統計機能
3. データベース連携

### Phase 3
1. ソーシャル機能
2. 高度な分析機能
3. パフォーマンス最適化

## セキュリティ要件
- ユーザー認証・認可
- 画像アップロード制限
- API レート制限
- データ暗号化

## パフォーマンス要件
- ページロード時間 < 2秒
- 画像最適化
- キャッシュ戦略
- SEO対応

## テスト戦略
- ユニットテスト（Jest）
- 統合テスト
- E2Eテスト（Playwright）
- アクセシビリティテスト 